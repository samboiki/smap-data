#!/usr/bin/python
# -*- python -*-

import sys
import optparse
import pprint

from twisted.internet import reactor, defer

import reporting
import util

parser = optparse.OptionParser()
parser.add_option('-d', '--deliver', dest='deliver', action='store_true',
                  default=False, help='Deliver undelivered data')
parser.add_option('-v', '--verbose', dest='verbose', action='store_true',
                  default=False, help='Dump pending data verbosely')
opts, args = parser.parse_args()

deferList = []
for rf in args:
    rpt = util.pickle_load(rf)
    print '=' * 60
    print " ReportFile:", rf
    print
    for r in rpt:
        for k in ['uuid', 'ReportDeliveryLocation', 'ReportResource', 'MinPeriod', 'MaxPeriod']:
            print ' ', k, ':', r[k]
        print "  Log Length:", len(r['PendingData'])
        print

    if opts.deliver:
        rinst = reporting.Reporting(None, reportfile=rf, autoflush=None)
        deferList.append(rinst._flush(force=True))

if opts.deliver and len(filter(lambda x: x != None, deferList)) > 0:
    d = defer.DeferredList(deferList, fireOnOneErrback=True, consumeErrors=True)
    d.addBoth(lambda _: reactor.stop())
    reactor.run()
