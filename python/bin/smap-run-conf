#!/usr/bin/env python
# -*- python -*-

import os
import sys
import uuid
import logging
from optparse import OptionParser

from twisted.python import log

from smap import core, server, driver, loader, smapconf

def get_parser():
    usage = 'usage: %prog [options] conf-file'
    parser = OptionParser(usage=usage)
    parser.add_option('-p', '--port', dest='port', default=None,
                      type='int',
                      help='port to run server on')
    parser.add_option('-d', '--data-dir', dest='data_dir', default=None,
                      type='str', help='directory for cached data')
    return parser

def start_log():
    log.startLogging(sys.stdout)

if __name__ == '__main__':
    parser = get_parser()
    opts, args = parser.parse_args()
    if len(args) != 1: 
        parser.error("conf file is a required argument")

    start_log()

    # change the default data dir to override the default
    if opts.data_dir:
        if not os.access(opts.data_dir, os.X_OK | os.W_OK):
            raise core.SmapException("Cannot access " + opts.data_dir)
        smapconf.SERVER['DataDir'] = opts.data_dir
    inst = loader.load(args[0])

    if opts.port:
        server.run(inst, port=opts.port)
    else:
        server.run(inst)
